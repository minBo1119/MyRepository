
--PRODUCT_STOCK 테이블 생성
CREATE TABLE PRODUCT_STOCK (
  PRODUCT_ID  VARCHAR2(30) PRIMARY KEY,
  P_NAME  VARCHAR2(30)  NOT NULL,
  PRICE NUMBER(10)  NOT NULL,
  DESCRIPTION VARCHAR2(50),
  STOCK NUMBER DEFAULT 0 
);  

--상품정보 insert
INSERT INTO PRODUCT_STOCK VALUES ('nb_ss7', '삼성노트북', 1570000, '시리즈 7', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('nb_macbook_air', '맥북에어', 1200000, 'xcode 4', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('pc_ibm', 'ibmPC', 750000, 'windows 8', DEFAULT);


CREATE TABLE PRODUCT_IO (
  IO_NUM NUMBER(10) PRIMARY KEY,
  PRODUCT_ID VARCHAR2(30) NOT NULL ,
  IO_DATE DATE DEFAULT SYSDATE,
  AMOUNT NUMBER(10),
  STATUS VARCHAR2(10) CHECK(STATUS IN('입고','출고')),
  CONSTRAINT FK_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT_STOCK(PRODUCT_ID) ON DELETE CASCADE
  
); 


CREATE SEQUENCE SEQ_IO_NUM
START WITH 1 
INCREMENT BY 1 
MAXVALUE 10000 
NOCYCLE
NOCACHE;


COMMIT;

CREATE OR REPLACE TRIGGER TRG_PRODUCT_AMOUNT AFTER
    INSERT ON PRODUCT_IO
    FOR EACH ROW
BEGIN
    IF :NEW.STATUS = '입고'
    THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK + :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
    
    IF :NEW.STATUS = '출고'
    THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK - :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
    
END;
/

SELECT * FROM PRODUCT_STOCK;

SELECT A.IO_NUM, A.PRODUCT_ID, B.P_NAME, A.IO_DATE, A.AMOUNT,A.STATUS
FROM PRODUCT_IO A
JOIN PRODUCT_STOCK B ON A.PRODUCT_ID=B.PRODUCT_ID;


SELECT A.IO_NUM, A.PRODUCT_ID, B.P_NAME, A.IO_DATE, A.AMOUNT,A.STATUS
FROM PRODUCT_IO A
JOIN PRODUCT_STOCK B ON A.PRODUCT_ID=B.PRODUCT_ID;


INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL, 'nb_ss7', DEFAULT, 30, '입고'); -- 예시
INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL, 'nb_ss7', DEFAULT, 5, '출고');
INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL, 'nb_ss7', DEFAULT, 10, '입고');


--입고할때

INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL, ?, DEFAULT, ?, '입고');


--출고할 때
INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL, ?, DEFAULT, ?, '출고');

--제약조건 추가해줄것임 마이너스 재고수량 안나게
ALTER TABLE PRODUCT_IO ADD CHECK(AMOUNT > 0 );
COMMIT;

ALTER TABLE PRODUCT_STOCK ADD CHECK(STOCK >= 0 );
COMMIT;